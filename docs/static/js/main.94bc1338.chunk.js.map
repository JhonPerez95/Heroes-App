{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/loginScreen.js","components/ui/NavBar.js","data/heroes.js","components/heroes/HeroeCard.js","components/heroes/HeroeList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroeScreen.js","selectors/getHeroeById.js","components/dc/DcScreen.js","hook/useForm.js","components/search/SearchScreen.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","App.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","type","payload","name","replace","NavBar","useHistory","user","to","activeClassName","exact","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroeCard","style","maxWidth","src","alt","HeroeList","useMemo","includes","Error","filter","heroe","getHeroesByPublisher","map","item","key","MarvelScreen","HeroeScreen","heroId","useParams","find","getHeroesById","length","push","goBack","DcScreen","useForm","initialState","useState","value","setValue","handleInputChange","target","resetInput","SearchScreen","location","useLocation","queryString","parse","search","q","findHero","formValue","heroesFiltered","hero","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","onChange","autoComplete","DashboardRoutes","path","component","PrivateRoute","isAuth","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","logged","authReducer","state","action","init","JSON","App","useReducer","useEffect","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94bc1338.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();\n","export const types = {\n  login: '[auth] login',\n  logout: '[auth] logout',\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nconst LoginScreen = ({ history }) => {\n  const { dispatch } = useContext(AuthContext);\n\n  const handleSubmit = () => {\n    const lastPath = localStorage.getItem('lastPath') || '/';\n    dispatch({\n      type: types.login,\n      payload: { name: 'Jhon' },\n    });\n    history.replace(lastPath);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Login:</h1>\n      <hr />\n\n      <button className=\"btn btn-primary\" onClick={handleSubmit}>\n        Login\n      </button>\n    </div>\n  );\n};\n\nLoginScreen.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { useContext } from 'react';\n\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const NavBar = () => {\n  const history = useHistory();\n  const {\n    user: { name },\n    dispatch,\n  } = useContext(AuthContext);\n  // const { name } = user;\n\n  const handleLogout = () => {\n    dispatch({\n      type: types.logout,\n    });\n\n    history.replace('/login');\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Asociaciones\n      </Link>\n\n      <div className=\"navbar-collapse\">\n        <div className=\"navbar-nav\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/marvel\"\n          >\n            Marvel\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/dc\"\n          >\n            DC\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/search\"\n          >\n            Search\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n        <ul className=\"navbar-nav ml-auto\">\n          <span className=\" nav-item nav-link text-info\">\n            {name ? name : 'Test User'}\n          </span>\n\n          <button onClick={handleLogout} className=\"nav-item nav-link btn\">\n            Logout\n          </button>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","export const heroes = [\n  {\n    id: 'dc-batman',\n    superhero: 'Batman',\n    publisher: 'DC Comics',\n    alter_ego: 'Bruce Wayne',\n    first_appearance: 'Detective Comics #27',\n    characters: 'Bruce Wayne',\n  },\n  {\n    id: 'dc-superman',\n    superhero: 'Superman',\n    publisher: 'DC Comics',\n    alter_ego: 'Kal-El',\n    first_appearance: 'Action Comics #1',\n    characters: 'Kal-El',\n  },\n  {\n    id: 'dc-flash',\n    superhero: 'Flash',\n    publisher: 'DC Comics',\n    alter_ego: 'Jay Garrick',\n    first_appearance: 'Flash Comics #1',\n    characters: 'Jay Garrick, Barry Allen, Wally West, Bart Allen',\n  },\n  {\n    id: 'dc-green',\n    superhero: 'Green Lantern',\n    publisher: 'DC Comics',\n    alter_ego: 'Alan Scott',\n    first_appearance: 'All-American Comics #16',\n    characters:\n      'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz',\n  },\n  {\n    id: 'dc-arrow',\n    superhero: 'Green Arrow',\n    publisher: 'DC Comics',\n    alter_ego: 'Oliver Queen',\n    first_appearance: 'More Fun Comics #73',\n    characters: 'Oliver Queen',\n  },\n  {\n    id: 'dc-wonder',\n    superhero: 'Wonder Woman',\n    publisher: 'DC Comics',\n    alter_ego: 'Princess Diana',\n    first_appearance: 'All Star Comics #8',\n    characters: 'Princess Diana',\n  },\n  {\n    id: 'dc-martian',\n    superhero: 'Martian Manhunter',\n    publisher: 'DC Comics',\n    alter_ego: \"J'onn J'onzz\",\n    first_appearance: 'Detective Comics #225',\n    characters: 'Martian Manhunter',\n  },\n  {\n    id: 'dc-robin',\n    superhero: 'Robin/Nightwing',\n    publisher: 'DC Comics',\n    alter_ego: 'Dick Grayson',\n    first_appearance: 'Detective Comics #38',\n    characters: 'Dick Grayson',\n  },\n  {\n    id: 'dc-blue',\n    superhero: 'Blue Beetle',\n    publisher: 'DC Comics',\n    alter_ego: 'Dan Garret',\n    first_appearance: 'Mystery Men Comics #1',\n    characters: 'Dan Garret, Ted Kord, Jaime Reyes',\n  },\n  {\n    id: 'dc-black',\n    superhero: 'Black Canary',\n    publisher: 'DC Comics',\n    alter_ego: 'Dinah Drake',\n    first_appearance: 'Flash Comics #86',\n    characters: 'Dinah Drake, Dinah Lance',\n  },\n  {\n    id: 'marvel-spider',\n    superhero: 'Spider Man',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Peter Parker',\n    first_appearance: 'Amazing Fantasy #15',\n    characters: 'Peter Parker',\n  },\n  {\n    id: 'marvel-captain',\n    superhero: 'Captain America',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Steve Rogers',\n    first_appearance: 'Captain America Comics #1',\n    characters: 'Steve Rogers',\n  },\n  {\n    id: 'marvel-iron',\n    superhero: 'Iron Man',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Tony Stark',\n    first_appearance: 'Tales of Suspense #39',\n    characters: 'Tony Stark',\n  },\n  {\n    id: 'marvel-thor',\n    superhero: 'Thor',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Thor Odinson',\n    first_appearance: 'Journey into Myster #83',\n    characters: 'Thor Odinson',\n  },\n  {\n    id: 'marvel-hulk',\n    superhero: 'Hulk',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Bruce Banner',\n    first_appearance: 'The Incredible Hulk #1',\n    characters: 'Bruce Banner',\n  },\n  {\n    id: 'marvel-wolverine',\n    superhero: 'Wolverine',\n    publisher: 'Marvel Comics',\n    alter_ego: 'James Howlett',\n    first_appearance: 'The Incredible Hulk #180',\n    characters: 'James Howlett',\n  },\n  {\n    id: 'marvel-daredevil',\n    superhero: 'Daredevil',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Matthew Michael Murdock',\n    first_appearance: 'Daredevil #1',\n    characters: 'Matthew Michael Murdock',\n  },\n  {\n    id: 'marvel-hawkeye',\n    superhero: 'Hawkeye',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Clinton Francis Barton',\n    first_appearance: 'Tales of Suspense #57',\n    characters: 'Clinton Francis Barton',\n  },\n  {\n    id: 'marvel-cyclops',\n    superhero: 'Cyclops',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Scott Summers',\n    first_appearance: 'X-Men #1',\n    characters: 'Scott Summers',\n  },\n  {\n    id: 'marvel-silver',\n    superhero: 'Silver Surfer',\n    publisher: 'Marvel Comics',\n    alter_ego: 'Norrin Radd',\n    first_appearance: 'The Fantastic Four #48',\n    characters: 'Norrin Radd',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst HeroeCard = ({\n  id,\n  superhero,\n  alter_ego,\n  first_appearance,\n  characters,\n}) => {\n  return (\n    <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <img\n            className=\"card-img-top\"\n            src={`../assets/heroes/${id}.jpg`}\n            alt={superhero}\n          />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{superhero}</h5>\n            <p className=\"card-text\">{alter_ego}</p>\n            {alter_ego !== characters && (\n              <p className=\"card-text\">{characters}</p>\n            )}\n            <p className=\"card-text\">\n              <small className=\"text-muted\"> {first_appearance}</small>\n            </p>\n            <Link to={`./heroe/${id}`}>Mas...</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeroeCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  superhero: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  alter_ego: PropTypes.string.isRequired,\n  first_appearance: PropTypes.string.isRequired,\n  characters: PropTypes.string.isRequired,\n};\n\nexport default HeroeCard;\n","import React, { useMemo } from 'react';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\nimport HeroeCard from './HeroeCard';\n\nconst HeroeList = ({ publisher }) => {\n  const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\n  return (\n    <div className=\"card-columns animate__animated animate__fadeIn\">\n      {heroes.map((item) => (\n        <HeroeCard key={item.id} {...item} />\n      ))}\n    </div>\n  );\n};\nexport default HeroeList;\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = (publisher) => {\n  const validPublisher = ['DC Comics', 'Marvel Comics'];\n\n  if (!validPublisher.includes(publisher)) {\n    throw new Error(`Publisher \"${publisher}\" no es correcto`);\n  }\n\n  return heroes.filter((heroe) => heroe.publisher === publisher);\n};\n","import React from 'react';\nimport HeroeList from '../heroes/HeroeList';\n\nconst MarvelScreen = () => {\n  return (\n    <div>\n      <h1> Marvel Heroes:</h1>\n      <hr />\n      <HeroeList publisher=\"Marvel Comics\" />\n    </div>\n  );\n};\n\nexport default MarvelScreen;\n","import React from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react';\n\nimport { getHeroesById } from '../../selectors/getHeroeById';\n\nconst HeroeScreen = ({ history }) => {\n  const { heroId } = useParams();\n\n  // useMemo , memoriza la funcion y solo se ejecutara de nuevo si el id cambia\n  const heroe = useMemo(() => getHeroesById(heroId), [heroId]);\n\n  if (!heroe) {\n    return <Redirect to=\"/\" />;\n  }\n  const {\n    id,\n    superhero,\n    alter_ego,\n    publisher,\n    first_appearance,\n    characters,\n  } = heroe;\n\n  const hanldeSubmit = () => {\n    if (history.length <= 2) {\n      history.push('/');\n    } else {\n      history.goBack();\n    }\n  };\n\n  return (\n    <div>\n      <h1> Heroe Description:</h1>\n      <hr />\n\n      <div className=\"row mt-5\">\n        <div className=\"col-4\">\n          <img\n            className=\"img-thumbnail animate__animated animate__bounceInLeft\"\n            src={`../assets/heroes/${id}.jpg`}\n            alt={superhero}\n          />\n        </div>\n        <div className=\"col-8\">\n          <h3>{superhero}</h3>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <b>Alter ego: </b>\n              {alter_ego}\n            </li>\n            <li className=\"list-group-item\">\n              <b>Publisher: </b>\n              {publisher}\n            </li>\n            <li className=\"list-group-item\">\n              <b>First Appearance: </b>\n              {first_appearance}\n            </li>\n          </ul>\n          <h5>Characters</h5>\n          <p>{characters}</p>\n          <button className=\"btn btn-outline-info\" onClick={hanldeSubmit}>\n            Return\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeroeScreen.propTypes = {\n  history: PropTypes.object.isRequired,\n};\nexport default HeroeScreen;\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesById = (id) => {\n  return heroes.find((heroe) => heroe.id === id);\n};\n","import React from 'react';\nimport HeroeList from '../heroes/HeroeList';\n\nconst DcScreen = () => {\n  return (\n    <div>\n      <h1> Dc Heroes:</h1>\n      <hr />\n      <HeroeList publisher=\"DC Comics\" />\n    </div>\n  );\n};\n\nexport default DcScreen;\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [value, setValue] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    setValue({ ...value, [target.name]: target.value });\n  };\n\n  const resetInput = () => {\n    setValue(initialState);\n  };\n\n  return [value, handleInputChange, resetInput];\n};\n\nexport default useForm;\n","import React, { useMemo } from 'react';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport HeroeCard from '../heroes/HeroeCard';\nimport useForm from '../../hook/useForm';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nconst SearchScreen = ({ history }) => {\n  // Location params\n  const location = useLocation();\n  const { q = '' } = queryString.parse(location.search);\n\n  // Form\n  const [formValue, handleInputChange] = useForm({\n    findHero: q,\n  });\n  const { findHero } = formValue;\n\n  // Selector\n  const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\n\n  const hanldeSubmit = (e) => {\n    e.preventDefault();\n    history.push(`?q=${findHero}`);\n  };\n\n  return (\n    <div>\n      <h1> Search Screen: </h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <h4> Search Form</h4>\n          <form onSubmit={hanldeSubmit}>\n            <input\n              name=\"findHero\"\n              type=\"text\"\n              placeholder=\"Find your hero\"\n              className=\"form-control\"\n              value={findHero}\n              onChange={handleInputChange}\n              autoComplete=\"off\"\n            />\n            <button type=\"submit\" className=\"btn btn-block btn-outline-primary\">\n              Search\n            </button>\n          </form>\n        </div>\n        <div className=\"col-7\">\n          <h4>Results</h4>\n          <hr />\n          {q === '' && <div className=\"alert alert-info\">Search a hero !</div>}\n          {q !== '' && heroesFiltered.length === 0 && (\n            <div className=\"alert alert-danger\">There is no hero with {q}</div>\n          )}\n          {heroesFiltered.map((heroe) => (\n            <HeroeCard key={heroe.id} {...heroe} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSearchScreen.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default SearchScreen;\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByName = (name = '') => {\n  if (name === '') {\n    return [];\n  }\n\n  return heroes.filter((hero) =>\n    hero.superhero.toLocaleLowerCase().includes(name)\n  );\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { NavBar } from '../components/ui/NavBar';\nimport MarvelScreen from '../components/marvel/MarvelScreen';\nimport HeroeScreen from '../components/heroes/HeroeScreen';\nimport DcScreen from '../components/dc/DcScreen';\nimport SearchScreen from '../components/search/SearchScreen';\n\nconst DashboardRoutes = () => {\n  return (\n    <>\n      <NavBar />\n      <div className=\"container mt-2\">\n        <Switch>\n          <Route exact path=\"/marvel\" component={MarvelScreen} />\n          <Route exact path=\"/dc\" component={DcScreen} />\n          <Route exact path=\"/heroe/:heroId\" component={HeroeScreen} />\n          <Route exact path=\"/search\" component={SearchScreen} />\n\n          <Redirect to=\"/marvel\" />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default DashboardRoutes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\n  localStorage.setItem('lastPath', rest.location.pathname);\n\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import React, { useContext } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport LoginScreen from '../components/login/loginScreen';\nimport DashboardRoutes from './DashboardRoutes';\nimport PrivateRoute from './PrivateRoute';\nimport { AuthContext } from '../auth/AuthContext';\nimport PublicRoute from './PublicRoute';\n\nconst AppRouter = () => {\n  const {\n    user: { logged },\n  } = useContext(AuthContext);\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuth={logged}\n          />\n          <PrivateRoute path=\"/\" component={DashboardRoutes} isAuth={logged} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        ...action.payload,\n        logged: true,\n      };\n    case types.logout:\n      return {\n        logged: false,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport AppRouter from './routers/AppRouter';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem('user')) || { logged: false };\n};\n\nfunction App() {\n  const [user, dispatch] = useReducer(authReducer, {}, init);\n\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(user));\n  }, [user]);\n\n  return (\n    <AuthContext.Provider value={{ user, dispatch }}>\n      <AppRouter />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}